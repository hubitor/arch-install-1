#!/usr/bin/env sh

printf "This machine's name: "
read -r LOCALHOST
printf "Your username of choice: "
read -r USERNAME
USERNAME="${USERNAME,,}"

MAXSIZE=$(lsblk | awk '/sda/ {print $4; exit}')
echo "The root partition size must not be greater than $MAXSIZE."
printf "Set the root partition size (i.e. 5G): "
read -r ROOTSIZE
ROOTSIZE="${ROOTSIZE^^}"

CC=$(curl -sL archlinux.org/mirrorlist | awk -F\" '/\"[A-Z]{2}/ {print $2}')
echo "Available country codes (used for mirrors):"
echo "$CC" | column

printf "Your country (or closest location): "
while read -r COUNTRY ; do
    if printf '%s' "$CC" | grep -iqx "$COUNTRY" ; then
        COUNTRY="${COUNTRY^^}"
        break
    else
        echo "Country not found! Please choose from one of the above."
    fi
done

uefi_partitioning() {
    parted -s --align optimal -- /dev/sda mklabel gpt \
        mkpart ESP fat32 1M 50M \
        set 1 boot on \
        mkpart primary ext3 50M "$ROOTSIZE" \
        mkpart primary ext3 "$ROOTSIZE" 100%

    mkfs.vfat -F32 /dev/sda1
    mkfs.ext4 /dev/sda2
    mkfs.ext4 /dev/sda3

    mount /dev/sda2 /mnt
    mkdir -p /mnt/boot
    mount /dev/sda1 /mnt/boot
}

bios_partitioning() {
    parted -s --align optimal -- /dev/sda mklabel msdos \
        mkpart primary ext3 1M "$ROOTSIZE" \
        set 1 boot on \
        mkpart primary ext3 "$ROOTSIZE" 100%

    mkfs.ext4 /dev/sda1
    mkfs.ext4 /dev/sda2

    mount /dev/sda1 /mnt
}

base_system() {
    URL="archlinux.org/mirrorlist/?country=$COUNTRY&use_mirror_status=on"
    curl -sL "$URL" | sed 's/#Server/Server/' > /etc/pacman.d/mirrorlist
    pacstrap /mnt base base-devel bash-completion expac pkgfile bc
    genfstab -U -p /mnt >> /mnt/etc/fstab
}

local_information() {
    nano /mnt/etc/locale.gen
    LOCALE=$(awk '!/\#/ {print $1}' /mnt/etc/locale.gen)
    arch-chroot /mnt locale-gen
    echo "LANG=$LOCALE" > /mnt/etc/locale.conf

    TIMEZONE="$(tzselect)"
    ln -s "/usr/share/zoneinfo/$TIMEZONE" /mnt/etc/localtime
    arch-chroot /mnt hwclock --systohc --utc

    echo "$LOCALHOST" > /mnt/etc/hostname

    echo "Password for superuser:"
    arch-chroot /mnt passwd

    arch-chroot /mnt useradd -m -g users -G wheel "$USERNAME"
    echo "Password for $USERNAME:"
    arch-chroot /mnt passwd "$USERNAME"
    sed -i "0,/# %w/s/# %w/%w/" /mnt/etc/sudoers
}

uefi_bootloader() {
    PARTID="$(blkid | awk -F\" '/sda2/ {print $6}')"
    bootctl --path=/mnt/boot install
    cat > /mnt/boot/loader/entries/arch.conf <<-EOF
        title       Arch Linux
        linux       /vmlinuz-linux
        initrd      /initramfs-linux.img
        options     root=PARTUUID=$PARTID rw quiet splash
EOF
}

bios_bootloader() {
    PARTID="$(blkid | awk -F\" '/sda1/ {print $2}')"
    syslinux-install_update -i -a -m -c /mnt/
    cat > /mnt/boot/syslinux/syslinux.cfg <<-EOF
        PROMPT 0
        TIMEOUT 1
        DEFAULT arch

        LABEL arch
            LINUX ../vmlinuz-linux
            APPEND root=UUID=$PARTID rw quiet splash
            INITRD ../initramfs-linux.img
EOF
}

uefi() {
    uefi_partitioning
    base_system
    local_information
    uefi_bootloader
}

bios() {
    bios_partitioning
    base_system
    pacman -r /mnt -S --noconfirm syslinux
    local_information
    bios_bootloader
}

if [ "$(efivar -l)" ] ; then
    uefi
else
    bios
fi
