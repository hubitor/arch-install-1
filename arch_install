#!/bin/bash

echo "This machine's name:"
read localhost
echo "Your username of choice:"
read username
echo "Set the root partition size (i.e. 5G):"
read rootsize
echo "Your country's calling code for pacman mirrors (i.e. BR):"
read country
echo "Choose your firmware type [UEFI/BIOS]:"
read bootloader

uefi_partitioning() {
    parted -s --align optimal -- /dev/sda mklabel gpt
    parted -s --align optimal -- /dev/sda mkpart ESP fat32 1M 50M
    parted -s --align optimal -- /dev/sda set 1 boot on
    parted -s --align optimal -- /dev/sda mkpart primary ext3 50M ${rootsize^^}
    parted -s --align optimal -- /dev/sda mkpart primary ext3 ${rootsize^^} 100%

    mkfs.vfat -F32 /dev/sda1
    mkfs.ext4 /dev/sda2
    mkfs.ext4 /dev/sda3

    mount /dev/sda2 /mnt
    mkdir -p /mnt/boot
    mount /dev/sda1 /mnt/boot
    mkdir -p /mnt/home
    mount /dev/sda3 /mnt/home
}

bios_partitioning() {
    parted -s --align optimal -- /dev/sda mklabel msdos
    parted -s --align optimal -- /dev/sda mkpart primary ext3 1M ${rootsize^^}
    parted -s --align optimal -- /dev/sda mkpart primary ext3 ${rootsize^^} 100%
    
    mkfs.ext4 /dev/sda1
    mkfs.ext4 /dev/sda2
    mount /dev/sda1 /mnt
    mkdir -p /mnt/home
    mount /dev/sda2 /mnt/home
}

base_system() {
    link="archlinux.org/mirrorlist/?country=${country^^}&use_mirror_status=on"
    sed 's/#Server/Server/' <(curl -sL ${link}) > /etc/pacman.d/mirrorlist
    pacstrap /mnt base base-devel bash-completion expac pkgfile
    genfstab -U -p /mnt >> /mnt/etc/fstab
}

local_information() {
    arch-chroot /mnt sed -i "s/#pt_BR.UTF-8 UTF-8/pt_BR.UTF-8 UTF-8/" /etc/locale.gen
    arch-chroot /mnt locale-gen
    arch-chroot /mnt echo "LANG=pt_BR.UTF-8" > /mnt/etc/locale.conf
    arch-chroot /mnt /bin/bash -c "export LANG=pt_BR.UTF-8"

    arch-chroot /mnt ln -s /usr/share/zoneinfo/America/Sao_Paulo /etc/localtime
    arch-chroot /mnt hwclock --systohc --utc

    arch-chroot /mnt echo ${localhost} > /mnt/etc/hostname
    echo "Password for superuser:"
    arch-chroot /mnt passwd
    arch-chroot /mnt useradd -m -g users -G wheel,storage,power -s /bin/bash ${username,,}
    echo "Password for ${username,,}:"
    arch-chroot /mnt passwd ${username,,}
    arch-chroot /mnt sed -i "s/# %wheel ALL=(ALL) ALL/%wheel ALL=(ALL) ALL/" /etc/sudoers

    arch-chroot /mnt mkinitcpio -p linux
}

uefi_bootloader() {
    arch-chroot /mnt bootctl install
    arch-chroot /mnt cat > /mnt/boot/loader/entries/arch.conf <<-EOF
        title       Arch Linux
        linux       /vmlinuz-linux
        initrd      /initramfs-linux.img
        options     root=/dev/sda2 rw quiet splash
EOF
}

bios_bootloader() {
    arch-chroot /mnt grub-install --target=i386-pc --recheck /dev/sda
    arch-chroot /mnt grub-mkconfig -o /boot/grub/grub.cfg
}

uefi() {
    uefi_partitioning
    base_system
    arch-chroot /mnt pacman -S --noconfirm dosfstools efibootmgr
    local_information
    uefi_bootloader
}

bios() {
    bios_partitioning
    base_system
    arch-chroot /mnt pacman -S --noconfirm grub
    local_information
    bios_bootloader
}

if [ ${bootloader^^} == "UEFI" ]; then
    uefi
elif [ ${bootloader^^} == "BIOS" ]; then
    bios
fi;
