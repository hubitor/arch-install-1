#!/bin/sh

read -rp "This machine's name: " localhost
read -rp "Your username of choice: " username
username="${username,,}"

size=$(lsblk | awk '/sda/ {print $4}')
echo "The root partition size must not be greater than $size."
read -rp "Set the root partition size (i.e. 5G): " rootsize
rootsize="${rootsize^^}"

cc=$(curl -sL https://www.archlinux.org/mirrorlist/ | \
     awk -F"[\"\"]" 'length($2)==2 && NR>2 {print $2}')
echo "Available country codes (used for mirrors):"
echo "$cc" | column

while read -rp "Your country (or closest location): " country ; do
    if grep -iqx "$country" <<< "$cc" ; then
        country="${country^^}"
        break
    else
        echo "Country not found! Please choose from one of the above."
    fi
done

uefi_partitioning() {
    parted -s --align optimal -- /dev/sda mklabel gpt \
        mkpart ESP fat32 1M 50M \
        set 1 boot on \
        mkpart primary ext3 50M "$rootsize" \
        mkpart primary ext3 "$rootsize" 100%

    mkfs.vfat -F32 /dev/sda1
    mkfs.ext4 /dev/sda2
    mkfs.ext4 /dev/sda3

    mount /dev/sda2 /mnt
    mkdir -p /mnt/boot
    mount /dev/sda1 /mnt/boot
    mkdir -p /mnt/home
    mount /dev/sda3 /mnt/home
}

bios_partitioning() {
    parted -s --align optimal -- /dev/sda mklabel msdos \
        mkpart primary ext3 1M "$rootsize" \
        mkpart primary ext3 "$rootsize" 100%

    mkfs.ext4 /dev/sda1
    mkfs.ext4 /dev/sda2

    mount /dev/sda1 /mnt
    mkdir -p /mnt/home
    mount /dev/sda2 /mnt/home
}

base_system() {
    link="archlinux.org/mirrorlist/?country=$country&use_mirror_status=on"
    curl -sL "$link" | sed 's/#Server/Server/' > /etc/pacman.d/mirrorlist
    pacstrap /mnt base base-devel bash-completion expac pkgfile
    genfstab -U -p /mnt >> /mnt/etc/fstab
}

local_information() {
    arch-chroot /mnt nano /etc/locale.gen
    locale=$(awk '!/\#/ {print $1}' /mnt/etc/locale.gen)
    arch-chroot /mnt locale-gen
    arch-chroot /mnt echo "LANG=$locale" > /mnt/etc/locale.conf
    arch-chroot /mnt /bin/bash -c "export LANG=$locale"

    timezone="$(tzselect)"
    arch-chroot /mnt ln -s /usr/share/zoneinfo/"${timezone}" /etc/localtime
    arch-chroot /mnt hwclock --systohc --utc

    arch-chroot /mnt echo "${localhost}" > /mnt/etc/hostname

    echo "Password for superuser:"
    arch-chroot /mnt passwd

    arch-chroot /mnt useradd -m -g users -G wheel,storage,power -s /bin/bash "$username"
    echo "Password for $username:"
    arch-chroot /mnt passwd "$username"
    arch-chroot /mnt sed -i "s/# %wheel ALL=(ALL) ALL/%wheel ALL=(ALL) ALL/" /etc/sudoers

    arch-chroot /mnt mkinitcpio -p linux
}

uefi_bootloader() {
    id="$(ls -l /dev/disk/by-partuuid | awk '/sda2/ {print $9}')"
    arch-chroot /mnt bootctl install
    arch-chroot /mnt cat > /mnt/boot/loader/entries/arch.conf <<-EOF
        title       Arch Linux
        linux       /vmlinuz-linux
        initrd      /initramfs-linux.img
        options     root=PARTUUID=$id rw quiet splash
EOF
}

bios_bootloader() {
    arch-chroot /mnt grub-install --recheck /dev/sda
    arch-chroot /mnt grub-mkconfig -o /boot/grub/grub.cfg
}

uefi() {
    uefi_partitioning
    base_system
    local_information
    uefi_bootloader
}

bios() {
    bios_partitioning
    base_system
    arch-chroot /mnt pacman -S --noconfirm grub
    local_information
    bios_bootloader
}

[ "$(efivar -l 2>/dev/null | wc -l)" -gt 0 ] && uefi || bios
